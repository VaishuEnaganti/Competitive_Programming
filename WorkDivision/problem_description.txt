Efficient division of work

You are given a job which has been divided into N tasks. The task cannot be
divided any further. Each of the N tasks takes S number of seconds to
complete. Your job will be completed when all your tasks are completed. You
have K workers at your disposal to help you complete the tasks. But as per
the nature of the job, a worker can only be allocated continuous tasks. A
worker can work only on a single task at any given point of time. However,
the workers can work in parallel on different tasks. You have to find the
minimum possible time in which you can complete the job.


Input Format
First line of input contains T - number of test cases. Its followed by 2T
lines. First line of each test case contains N and K - number of tasks and
available workers for the current job, separated by space. The next line
contains N positive integers - denoting the time taken to complete the ith
task.

Constraints
1 <= N,K <= 20
1 <= N,K <= 10000
General Constraints
1 <= T <= 50
1 <= S <= 103

Output Format
For each test case, print the minimum possible time in which you can
complete the job, separated by newline.
